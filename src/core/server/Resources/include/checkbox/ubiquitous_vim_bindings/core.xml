<?xml version="1.0"?>
<root>
  <item>
    <name>Ubiquitous Vim Bindings</name>

    <item>
      <name>Documentation:</name>
      <item>
        <name>Ubiquitous Vim Bindings for Normal Mode:</name>
        <appendix>To enable these settings enable a binding or set of bindings to enter Normal Mode below.</appendix>
        <appendix></appendix>
        <appendix>h: Left</appendix>
        <appendix>j: Down</appendix>
        <appendix>k: Up</appendix>
        <appendix>l: Right</appendix>
        <appendix>b: Back a word (Option_L+Left)</appendix>
        <appendix>B: Back two words (Option_L+Left, Option_L+Left)</appendix> <!-- TODO: Can't detect WORDs, so doing next best thing. -->
        <appendix>e: Back to end of previous word (Option_L+Right)</appendix>
        <appendix>E: Back to end of previous word twice (Option_L+Right, Option_L+Right)</appendix> <!-- TODO: Can't detect WORDs, so doing next best thing. -->
        <appendix>w: Forward a word (Option_L+Right, Option_L+Right, Option_L+Left)</appendix>
        <appendix>W: Forward two words (Option_L+Right, Option_L+Right, Option_L+Right, Option_L+Left)</appendix> <!-- TODO: Can't detect WORDs, so doing next best thing. -->
        <appendix>Ctrl-f Move page down (Option_L+PageDown)</appendix>
        <appendix>Ctrl-b Move page up (Option_L+PageUp)</appendix>
        <appendix>Ctrl-n Down</appendix> <!-- TODO: Not always what we want, but often sufficient. -->
        <appendix>Ctrl-p Up</appendix> <!-- TODO: Not always what we want, but often sufficient. -->
        <appendix>G: Move to end of document (Command_L+Down)</appendix>
        <appendix>0: Move to beginning of line (Command_L+Left)</appendix>
        <appendix>^: Move to beginning of line (Command_L+Left,Option_L+Right, Option-L+Left) [^ == Shift+6]</appendix> <!-- TODO: Best approximation of first non-whitespace character in the line. -->
        <appendix>$: Move to end of line (Command_L+Right) [$ == Shift+4]</appendix>
        <appendix>(: Move to beginning of the current paragraph (Option-Up Arrow)</appendix>
        <appendix>): Move to end of the current paragraph (Option-Down Arrow)</appendix>
        <appendix>/: Find (Command_L+f, Exit Normal Mode)</appendix>
        <appendix>n: Find next match (Command_L+g)</appendix>
        <appendix>N: Find previous match (Shift_L+Command_L+g)</appendix>
        <appendix>x: Forward Delete</appendix>
        <appendix>X: Delete</appendix>
        <appendix>o: Begin new line below cursor (Command_L+Right, Shift+Return, Exit Normal Mode)</appendix>
        <appendix>O: Begin new line above cursor (Command_L+Left, Shift+Return, Up, Exit Normal Mode)</appendix>
        <appendix>a: Append (Exit Normal Mode)</appendix>
        <appendix>A: Append at end of line (Command_L+Right, Exit Normal Mode)</appendix>
        <appendix>i: Insert (Exit Normal Mode)</appendix>
        <appendix>I: Insert at beginning of line (Command_L+Left, Exit Normal Mode)</appendix>
        <appendix>J: Join line (Command_L+Right, Shift_L+Forward Delete)</appendix> <!-- TODO: Can't special-case whitespace, so doing next best thing. -->
        <appendix>u: Undo (Command_L+z)</appendix>
        <appendix>U: Undo (Command_L+z)</appendix> <!-- TODO: Can't distinguish undo contexts, so doing next best thing. -->
        <appendix>Ctrl-r: Redo (Command_L+Shift_L+z)</appendix>
        <appendix>cc: Change line</appendix>
        <appendix>cb: Change backward-word</appendix>
        <appendix>ce: Change word</appendix>
        <appendix>cw: Change word</appendix>
        <appendix>c$: Change text to the end of line</appendix>
        <appendix>dd: Delete line (Command+CursorLeft, Shift_L+Down, Command+X)</appendix>
        <appendix>db: Delete backward-word</appendix>
        <appendix>de: Delete word</appendix>
        <appendix>dw: Delete word</appendix>
        <appendix>d$: Delete to end of line</appendix>
        <appendix>D: Delete to end of line (Command_L+Shift_L+Right, Delete)</appendix>
        <appendix>r: Replace character</appendix>
        <appendix>R: Replace text</appendix>
        <appendix>H: Current line to top (Option_L+PageDown, Down, Up)</appendix> <!-- TODO: Can't navigate in visible area, so doing something with a somewhat similar effect. -->
        <appendix>L: Current line to bottom (Option_L+PageUp, Up, Down)</appendix> <!-- TODO: Can't navigate in visible area, so doing something with a somewhat similar effect. -->
        <appendix>M: Current line to middle (Option_L+PageDown, Option+PageUp)</appendix> <!-- TODO: Can't navigate in visible area, so doing something with a somewhat similar effect. -->
        <appendix>s: delete character at cursor and subsitute text</appendix>
        <appendix>S: Delete line (Command_L+Left, Command_L+Shift_L+Right, Command_L-x)</appendix> <!-- FIXME: implement this. -->
        <appendix>yy: Yank line (Command_L+Left, Shift_L+Down, Command_L-c)</appendix>
        <appendix>Y: Yank line (Command_L+Left, Shift_L+Down, Command_L-c)</appendix>
        <appendix>p: Paste line below (Command_L+Left, Down, Command_L+v)</appendix>
        <appendix>P: Paste line above (Command_L+Left, Command_L+v)</appendix>
        <appendix>ZZ: Close Window (Command_L+w)</appendix>
        <appendix></appendix>
        <appendix>g operator-pending mode:</appendix>
        <appendix>gt: Next tab (Shift-L+Command_L+}) [Can vary by application.]</appendix>
        <appendix>gT: Previous tab (Shift-L+Command_L+{) [Can vary by application.]</appendix>
        <appendix>gg: Move to beginning of document (Command_L+Up)</appendix>
        <appendix></appendix>
        <appendix>C-w operator-pending mode:</appendix>
        <appendix>C-w, x: Close Window (Command_L+w)</appendix>
        <appendix>C-w, n: New Window (Command_L+n)</appendix>
        <appendix>C-w, w: Next Window (Command_L+`)</appendix>
        <appendix>C-w, j: Next Window (Command_L+`)</appendix>
        <appendix>C-w, l: Next Window (Command_L+`)</appendix>
        <appendix>C-w, h: Previous Window (Command_L+Shift_L+`)</appendix>
        <appendix>C-w, k: Previous Window (Command_L+Shift_L+`)</appendix>
        <appendix></appendix>
        <appendix>Non-standard behavior:</appendix>
        <appendix>f: FN</appendix>
        <appendix></appendix>
        <appendix>Any key (without a modifier) not defined here is a dead key.</appendix>
        <appendix></appendix>
        <appendix>Ubiquitous Vim Normal Mode is inactive in terminal applications, Firefox, emacs, vi and vim,</appendix>
        <appendix>and when the password dialog box is active.</appendix>
        <appendix></appendix>
        <appendix>Ubiquitous Vim Normal Mode is designed for QWERTY layout.</appendix>

        <identifier vk_config="true">notsave.ubiq_vimnormal</identifier>

        {{ UBIQUITOUS_VIM_BINDINGS_EXTRA }}

        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>__ShowStatusMessage__ Normal Mode</autogen>

        <!-- ============================================================ -->
        <!-- c operator pending -->

        <block>
          <config_only>notsave.c_operator_pending</config_only>

          <!-- cc -->
          <autogen>
            __KeyToKey__
            KeyCode::C, ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
            KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQ_SET_REGISTER_TYPE_LINE }}
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
          </autogen>

          <!-- cb -->
          <autogen>
            __KeyToKey__
            KeyCode::B, ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
          </autogen>

          <!-- ce -->
          <autogen>
            __KeyToKey__
            KeyCode::E, ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
          </autogen>

          <!-- cw -->
          <autogen>
            __KeyToKey__
            KeyCode::W, ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
          </autogen>

          <!-- c$ -->
          <autogen>
            __KeyToKey__
            KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
          </autogen>
        </block>

        <!-- ============================================================ -->
        <!-- d operator pending -->
        <block>
          <config_only>notsave.d_operator_pending</config_only>

          <!-- dd -->
          <autogen>
            __KeyToKey__
            KeyCode::D, ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
            KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            {{ UBIQ_SET_REGISTER_TYPE_LINE }}
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_d_operator_pending
          </autogen>

          <!-- db -->
          <autogen>
            __KeyToKey__
            KeyCode::B, ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_d_operator_pending
          </autogen>

          <!-- de -->
          <autogen>
            __KeyToKey__
            KeyCode::E, ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_d_operator_pending
          </autogen>

          <!-- dw -->
          <autogen>
            __KeyToKey__
            KeyCode::W, ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::CURSOR_LEFT,  ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_d_operator_pending
          </autogen>

          <!-- d$ -->
          <autogen>
            __KeyToKey__
            KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_d_operator_pending
          </autogen>
        </block>

        <!-- ============================================================ -->
        <!-- g operator pending -->
        <block>
          <config_only>notsave.g_operator_pending</config_only>

          <!-- Default gg behavior -->
          <autogen>
            __KeyToKey__
            KeyCode::G, ModifierFlag::NONE,
            KeyCode::CURSOR_UP, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending
          </autogen>

          <!-- ======================================== -->
          <!-- gt, gT (tab-switch) bindings -->

          <!-- Skype -->
          <block>
            <only>SKYPE</only>
            <autogen>
              __KeyToKey__
              KeyCode::T, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::T, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending
            </autogen>
          </block>

          <!-- Thunderbird -->
          <block>
            <only>THUNDERBIRD</only>
            <autogen>
              __KeyToKey__
              KeyCode::T, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::T, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending
            </autogen>
          </block>

          <!-- Default -->
          <block>
            <autogen>
              __KeyToKey__
              KeyCode::T, ModifierFlag::NONE,
              KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::T, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_g_operator_pending
            </autogen>
          </block>
        </block>

        <!-- ============================================================ -->
        <!-- r operator pending -->
        <block>
          <config_only>notsave.r_operator_pending</config_only>

          <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_r_operator_pending</autogen>

          <include path="r_operator.xml">
            <replacementdef>
              <replacementname>BEFORE</replacementname>
              <replacementvalue>KeyCode::FORWARD_DELETE</replacementvalue>
            </replacementdef>
            <replacementdef>
              <replacementname>AFTER</replacementname>
              <replacementvalue>
                KeyCode::VK_CONFIG_FORCE_OFF_notsave_r_operator_pending,
              </replacementvalue>
            </replacementdef>
          </include>
        </block>

        <!-- ============================================================ -->
        <!-- R operator pending -->
        <block>
          <config_only>notsave.R_operator_pending</config_only>

          <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::VK_CONFIG_FORCE_OFF_notsave_R_operator_pending</autogen>

          <include path="r_operator.xml">
            <replacementdef>
              <replacementname>BEFORE</replacementname>
              <replacementvalue>KeyCode::FORWARD_DELETE</replacementvalue>
            </replacementdef>
            <replacementdef>
              <replacementname>AFTER</replacementname>
              <replacementvalue></replacementvalue>
            </replacementdef>
          </include>
        </block>

        <block>
          <!-- Unimplemented dead keys in Normal Mode -->
          <autogen>
            __KeyToKey__
            KeyCode::V, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::V, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::M, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::Z, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::F, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::EQUAL, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::EQUAL, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::DOT, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::DOT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::BACKQUOTE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::BRACKET_LEFT, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::BRACKET_LEFT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::BRACKET_RIGHT, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::BRACKET_RIGHT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::BACKSLASH, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::BACKSLASH, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::SEMICOLON, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <block>
            <config_not>option.vimnormal_turnoff_backquote</config_not>
            <autogen>
              __KeyToKey__
              KeyCode::BACKQUOTE, ModifierFlag::NONE,
              KeyCode::VK_NONE
            </autogen>
          </block>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_1, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_1, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_2, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_2, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_3, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_3, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_4, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_5, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_5, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_6, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_7, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_7, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_8, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_8, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_9, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_9, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::CURSOR_UP, ModifierFlag::OPTION_L,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::KEY_0, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L,
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::Q, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::SEMICOLON, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::QUOTE, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::QUOTE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::COMMA, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::COMMA, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::MINUS, ModifierFlag::NONE,
            KeyCode::VK_NONE
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::MINUS, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::VK_NONE
          </autogen>
          <block>
            <config_not>option.ubiquitous_vim_bindings_enable_tab</config_not>
            <autogen>
              __KeyToKey__
              KeyCode::TAB, ModifierFlag::NONE,
              KeyCode::VK_NONE
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::VK_NONE
            </autogen>
          </block>
          <block>
            <config_not>notsave.g_operator_pending</config_not>
            <autogen>
              __KeyToKey__
              KeyCode::T, ModifierFlag::NONE,
              KeyCode::VK_NONE
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::T, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::VK_NONE
            </autogen>
          </block>

          <!-- hjkl -->
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>
              __KeyToKey__ {{VI_H}}, ModifierFlag::NONE,
              KeyCode::CURSOR_LEFT
            </autogen>
            <autogen>
              __KeyToKey__ {{VI_J}}, ModifierFlag::NONE,
              KeyCode::CURSOR_DOWN
            </autogen>
            <autogen>
              __KeyToKey__ {{VI_K}}, ModifierFlag::NONE,
              KeyCode::CURSOR_UP
            </autogen>
            <autogen>
              __KeyToKey__ {{VI_L}}, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT
            </autogen>
          </block>

          <!-- DELETE -->
          <autogen>
            __KeyToKey__
            KeyCode::DELETE, ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT
          </autogen>

          <!-- FN + hjkl -->
          <autogen>
            __KeyToKey__ {{VI_H}}, ModifierFlag::FN,
            KeyCode::HOME, ModifierFlag::OPTION_L
          </autogen>
          <autogen>
            __KeyToKey__ {{VI_J}}, ModifierFlag::FN,
            KeyCode::PAGEDOWN, ModifierFlag::OPTION_L
          </autogen>
          <autogen>
            __KeyToKey__ {{VI_K}}, ModifierFlag::FN,
            KeyCode::PAGEUP, ModifierFlag::OPTION_L
          </autogen>
          <autogen>
            __KeyToKey__ {{VI_L}}, ModifierFlag::FN,
            KeyCode::END, ModifierFlag::OPTION_L
          </autogen>

          <!-- H, M, L --> <!-- TODO: H and L are questionable. May be no good way to implement. -->
          <autogen>
            __KeyToKey__
            {{VI_H}}, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::PAGEDOWN, ModifierFlag::NONE,
            KeyCode::CURSOR_DOWN,
            KeyCode::CURSOR_UP
          </autogen>
          <autogen>
            __KeyToKey__
            {{VI_L}}, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::PAGEUP, ModifierFlag::NONE,
            KeyCode::CURSOR_UP,
            KeyCode::CURSOR_DOWN
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::M, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::PAGEDOWN, ModifierFlag::OPTION_L,
            KeyCode::PAGEUP, ModifierFlag::OPTION_L
          </autogen>

          <!-- C-f, C-b -->
          <autogen>__KeyToKey__ KeyCode::F, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL, KeyCode::PAGEDOWN, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::B, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL, KeyCode::PAGEUP, ModifierFlag::OPTION_L</autogen>

          <!-- b, e, w, B, E, W -->
          <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::NONE, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::E, ModifierFlag::NONE, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
          <autogen>
            __KeyToKey__
            KeyCode::B, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L,
            KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::E, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
            KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L
          </autogen>
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>
              __KeyToKey__
              KeyCode::W, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
              KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
              KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
              KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
              KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
              KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L
            </autogen>
          </block>

          <!-- /, n, N -->
          <autogen>
            __KeyToKey__
            KeyCode::SLASH, ModifierFlag::NONE,
            KeyCode::F, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
          </autogen>
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>
              __KeyToKey__
              KeyCode::N, ModifierFlag::NONE,
              KeyCode::G, ModifierFlag::COMMAND_L
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::N, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::G, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L
            </autogen>
          </block>

          <!-- G -->
          <autogen>
            __KeyToKey__
            KeyCode::G, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::CURSOR_DOWN, ModifierFlag::COMMAND_L
          </autogen>

          <!-- x, X -->
          <block>
            <config_not>notsave.c_w_operator_pending</config_not>
            <autogen>
              __KeyToKey__
              KeyCode::X, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L,
              KeyCode::X, ModifierFlag::COMMAND_L,
              {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            </autogen>
          </block>
          <autogen>
            __KeyToKey__
            KeyCode::X, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
            KeyCode::CURSOR_LEFT, ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
          </autogen>

          <!-- u, C-r -->
          <autogen>
            __KeyToKey__
            KeyCode::U, ModifierFlag::NONE,
            KeyCode::Z, ModifierFlag::COMMAND_L,
            KeyCode::CURSOR_LEFT,
            KeyCode::CURSOR_RIGHT
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::U, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::Z, ModifierFlag::COMMAND_L,
            KeyCode::CURSOR_LEFT,
            KeyCode::CURSOR_RIGHT
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::R, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
            KeyCode::Z, ModifierFlag::SHIFT_L | ModifierFlag::COMMAND_L
          </autogen>

          <!-- ZZ -->
          <autogen>
            __DoublePressModifier__
            KeyCode::Z, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
            KeyCode::CONTROL_L,
            KeyCode::W, ModifierFlag::COMMAND_L
          </autogen>

          <!-- C -->
          <autogen>
            __KeyToKey__
            KeyCode::C, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
            KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
            KeyCode::X, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
          </autogen>

          <!-- f -->
          <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::NONE, KeyCode::FN</autogen>

          <block>
            <not>ADIUMX</not>

            <!-- 0, ^, $ -->
            <autogen>
              __KeyToKey__
              KeyCode::KEY_0, ModifierFlag::NONE,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::KEY_6, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
              KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L,
              KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L
            </autogen>

            <!-- o, O -->
            <autogen>
              __KeyToKey__
              KeyCode::O, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L,
              KeyCode::RETURN, ModifierFlag::SHIFT_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::O, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
              KeyCode::RETURN, ModifierFlag::SHIFT_L,
              KeyCode::CURSOR_UP,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- a, A -->
            <autogen>
              __KeyToKey__
              KeyCode::A, ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::A, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- J -->
            <autogen>
              __KeyToKey__
              KeyCode::J, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::NONE,
              KeyCode::SPACE,
              KeyCode::FORWARD_DELETE, ModifierFlag::SHIFT_L
            </autogen>

            <!-- i, I -->
            <autogen>
              __KeyToKey__
              KeyCode::I, ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::I, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- s -->
            <autogen>
              __KeyToKey__
              KeyCode::S, ModifierFlag::NONE,
              <!-- select one char -->
              KeyCode::CURSOR_RIGHT, ModifierFlag::SHIFT_L,
              <!-- cut -->
              KeyCode::X, ModifierFlag::COMMAND_L,
              <!-- to insert mode -->
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- S -->
            <autogen>
              __KeyToKey__
              KeyCode::S, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
              KeyCode::X, ModifierFlag::COMMAND_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- yy, Y -->
            <autogen>
              __DoublePressModifier__
              KeyCode::Y, ModifierFlag::NONE,
              KeyCode::VK_NONE,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
              KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
              KeyCode::C, ModifierFlag::COMMAND_L,
              {{ UBIQ_SET_REGISTER_TYPE_LINE }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::Y, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
              KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
              KeyCode::C, ModifierFlag::COMMAND_L,
              {{ UBIQ_SET_REGISTER_TYPE_LINE }}
            </autogen>

            <!-- p, P -->
            <block>
              <config_only>notsave.ubiq_register_type_character</config_only>
              <autogen>
                __KeyToKey__
                KeyCode::P, ModifierFlag::NONE,
                KeyCode::CURSOR_RIGHT,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
              <autogen>
                __KeyToKey__
                KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
            </block>
            <block>
              <config_not>notsave.ubiq_register_type_character</config_not>
              <autogen>
                __KeyToKey__
                KeyCode::P, ModifierFlag::NONE,
                KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
                KeyCode::CURSOR_DOWN,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
              <autogen>
                __KeyToKey__
                KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
                KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
            </block>

            <!-- D -->
            <autogen>
              __KeyToKey__
              KeyCode::D, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
              KeyCode::X, ModifierFlag::COMMAND_L,
              {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
            </autogen>

            <!-- C-n, C-p -->
            <autogen>
              __KeyToKey__
              KeyCode::N, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
              KeyCode::CURSOR_DOWN
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
              KeyCode::CURSOR_UP
            </autogen>

          </block>

          <!-- Adium Customization: Adium interprets Command+Left or Command+Right as Tab change commands rather than text field editor commands. -->
          <block>
            <only>ADIUMX</only>

            <!-- 0, ^, $ -->
            <autogen>
              __KeyToKey__
              KeyCode::KEY_0, ModifierFlag::NONE,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::KEY_6, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L
            </autogen>

            <!-- o, O -->
            <autogen>
              __KeyToKey__
              KeyCode::O, ModifierFlag::NONE,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L,
              KeyCode::RETURN, ModifierFlag::OPTION_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::O, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L,
              KeyCode::RETURN, ModifierFlag::OPTION_L,
              KeyCode::CURSOR_UP,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- a, A -->
            <autogen>
              __KeyToKey__
              KeyCode::A, ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::A, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- J -->
            <autogen>
              __KeyToKey__
              KeyCode::J, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::NONE,
              KeyCode::SPACE,
              KeyCode::FORWARD_DELETE, ModifierFlag::SHIFT_L
            </autogen>

            <!-- i, I -->
            <autogen>
              __KeyToKey__
              KeyCode::I, ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::I, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L | ModifierFlag::NONE,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- S -->
            <autogen>
              __KeyToKey__
              KeyCode::S, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L,
              KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
              KeyCode::X, ModifierFlag::COMMAND_L,
              KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
              {{ UBIQ_SET_REGISTER_TYPE_CHARACTER }}
              {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
            </autogen>

            <!-- yy, Y -->
            <autogen>
              __DoublePressModifier__
              KeyCode::Y, ModifierFlag::NONE,
              KeyCode::VK_NONE,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L,
              KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
              KeyCode::C, ModifierFlag::COMMAND_L,
              {{ UBIQ_SET_REGISTER_TYPE_LINE }}
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::Y, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L,
              KeyCode::CURSOR_DOWN, ModifierFlag::SHIFT_L,
              KeyCode::C, ModifierFlag::COMMAND_L,
              {{ UBIQ_SET_REGISTER_TYPE_LINE }}
            </autogen>

            <!-- p, P -->
            <block>
              <config_only>notsave.ubiq_register_type_character</config_only>
              <autogen>
                __KeyToKey__
                KeyCode::P, ModifierFlag::NONE,
                KeyCode::CURSOR_RIGHT,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
              <autogen>
                __KeyToKey__
                KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
            </block>
            <block>
              <config_not>notsave.ubiq_register_type_character</config_not>
              <autogen>
                __KeyToKey__
                KeyCode::P, ModifierFlag::NONE,
                KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L,
                KeyCode::CURSOR_DOWN,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
              <autogen>
                __KeyToKey__
                KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
                KeyCode::CURSOR_LEFT, ModifierFlag::CONTROL_L,
                KeyCode::V, ModifierFlag::COMMAND_L
              </autogen>
            </block>

            <!-- D -->
            <autogen>
              __KeyToKey__
              KeyCode::D, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
              KeyCode::CURSOR_RIGHT, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L,
              KeyCode::DELETE
            </autogen>

            <!-- C-n, C-p -->
            <autogen>
              __KeyToKey__
              KeyCode::N, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
              KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L
            </autogen>
            <autogen>
              __KeyToKey__
              KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
              KeyCode::CURSOR_UP, ModifierFlag::OPTION_L
            </autogen>

          </block>
        </block>

        <!-- Enter c operator pending mode. -->
        <block>
          <config_not>notsave.c_operator_pending</config_not>
          <autogen>
            __KeyToKey__
            KeyCode::C, ModifierFlag::NONE,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_c_operator_pending
          </autogen>
        </block>

        <!-- Enter d operator pending mode. -->
        <block>
          <config_not>notsave.d_operator_pending</config_not>
          <autogen>
            __KeyToKey__
            KeyCode::D, ModifierFlag::NONE,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_d_operator_pending
          </autogen>
        </block>

        <!-- Enter g operator pending mode. -->
        <block>
          <config_not>notsave.g_operator_pending</config_not>
          <autogen>
            __KeyToKey__
            KeyCode::G, ModifierFlag::NONE,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_g_operator_pending
          </autogen>
        </block>

        <!-- Enter r operator pending mode. -->
        <block>
          <config_not>notsave.r_operator_pending</config_not>
          <autogen>
            __KeyToKey__
            KeyCode::R, ModifierFlag::NONE,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_r_operator_pending
          </autogen>
        </block>

        <!-- Enter R operator pending mode. -->
        <block>
          <config_not>notsave.R_operator_pending</config_not>
          <autogen>
            __KeyToKey__
            KeyCode::R, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_R_operator_pending
          </autogen>
        </block>

        <!-- Enter C-w operator pending mode. -->
        <block>
          <config_not>notsave.c_w_operator_pending</config_not>
          <autogen>
            __KeyToKey__
            KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_c_w_operator_pending
          </autogen>
        </block>

        <!-- C-w operator pending mode commands. -->
        <block>
          <config_only>notsave.c_w_operator_pending</config_only>
          <!-- New window with C-w, n -->
          <autogen>
            __KeyToKey__
            KeyCode::N,
            KeyCode::N, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending
          </autogen>
          <!-- Close window with C-w, x -->
          <autogen>
            __KeyToKey__
            KeyCode::X,
            KeyCode::W, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending
          </autogen>

          <!-- Switch windows with C-w, w/h/j/k/l -->
          <autogen>
            __KeyToKey__
            KeyCode::W,
            KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::H,
            KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::J,
            KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::K,
            KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending
          </autogen>
          <autogen>
            __KeyToKey__
            KeyCode::L,
            KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_c_w_operator_pending
          </autogen>
        </block>
      </item>
    </item>

    <item>
      <name>Insert Mode Commands</name>
      <item>
        <name>Enable Insert Mode Commands</name>
        <appendix>Ctrl-w delete preceding word (Shift+Option+Left, Delete)</appendix>
        <appendix>Ctrl-u delete preceding line (Shift+Command+Left, Delete)</appendix>
        <appendix>Ctrl-d remove an indent (Command+BracketLeft)</appendix>
        <appendix>Ctrl-t add an indent (Command+BracketRight)</appendix>
        <appendix></appendix>
        <appendix>These commands are available when not in Normal Mode.</appendix>
        <identifier>option.ubiq_vimnormal_insert</identifier>

        <!-- Insert Mode Commands -->
        <block>
          <config_not>notsave.ubiq_vimnormal</config_not>
          <config_only>option.ubiq_vimnormal_insert</config_only>
          <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>

          <!-- Ctrl-w -->
          <autogen>
            __KeyToKey__
            KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
            KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L,
            KeyCode::DELETE
          </autogen>

          <!-- Ctrl-u -->
          <autogen>
            __KeyToKey__
            KeyCode::U, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
            KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L,
            KeyCode::DELETE
          </autogen>

          <!-- Ctrl-d -->
          <autogen>
            __KeyToKey__
            KeyCode::D, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
            KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_L
          </autogen>

          <!-- Ctrl-t -->
          <autogen>
            __KeyToKey__
            KeyCode::T, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
            KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_L
          </autogen>

        </block>
      </item>
    </item>

    <item>
      <name>Recommended binding options to enter Normal Mode</name>

      <item>
        <name>Normal Mode exit commands simultaneously force Modifier Lock off and exit any active operator pending mode.</name>
      </item>

      <item>
        <name>Esc toggles Normal Mode</name>
        <appendix>Holding Esc sends raw Esc</appendix>
        <appendix></appendix>
        <appendix>Lowering the Holding Threshold setting is recommended (200ms)</appendix>
        <identifier>remap.vimnormal_escape_toggle</identifier>
        <!-- Normal Mode on in mode-allowing context: Esc exits Normal Mode, holding Esc sends raw Esc. -->
        <block>
          <config_only>notsave.ubiq_vimnormal</config_only>
          <config_not>option.vimnormal_escape_enters_only</config_not>
          <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::ESCAPE,
            KeyCode::VK_LOCK_ALL_FORCE_OFF,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
            KeyCode::VK_NONE,
            KeyCode::ESCAPE
          </autogen>
        </block>
        <!-- Normal Mode on in mode-allowing context: Esc remains in Normal Mode, holding Esc sends raw Esc. -->
        <block>
          <config_only>notsave.ubiq_vimnormal, option.vimnormal_escape_enters_only</config_only>
          <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::ESCAPE,
            KeyCode::VK_LOCK_ALL_FORCE_OFF,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal,
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
            KeyCode::VK_NONE,
            KeyCode::ESCAPE
          </autogen>
        </block>
        <!-- Normal Mode off in mode-allowing context: Esc enters Normal Mode, holding Esc sends raw Esc. -->
        <block>
          <config_not>notsave.ubiq_vimnormal</config_not>
          <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
          <autogen>
            __HoldingKeyToKey__
            KeyCode::ESCAPE,
            KeyCode::VK_LOCK_ALL_FORCE_OFF,
            KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal,
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
            KeyCode::VK_NONE,
            KeyCode::ESCAPE
          </autogen>
        </block>
        <!-- Normal Mode on in mode-prohibiting context: Esc sends raw Esc and exits Normal Mode. -->
        <block>
          <config_only>notsave.ubiq_vimnormal</config_only>
          <only>TERMINAL, VI, PASSWORD, FIREFOX, EMACS</only>
          <autogen>
            __KeyToKey__
            KeyCode::ESCAPE,
            KeyCode::VK_LOCK_ALL_FORCE_OFF,
            KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
            {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
            KeyCode::ESCAPE
          </autogen>
        </block>
      </item>

      <item>
        <name>Esc does not exit Normal Mode.</name>
        <identifier>option.vimnormal_escape_enters_only</identifier>
      </item>

      <item>
        <name>Simultaneous jk toggles Normal Mode</name>
        <identifier>remap.vimnormal_jk_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::J, KeyCode::K,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>

      <item>
        <name>Ctrl-[ toggles Normal Mode</name>
        <identifier>remap.vimnormal_ctrlbracketleft_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyToKey__
          KeyCode::BRACKET_LEFT, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>

      <item>
        <name>Ctrl-L toggles Normal Mode</name>
        <identifier>remap.vimnormal_ctrll_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyToKey__
          KeyCode::L, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>

      <item>
        <name>Command_R tap toggles Normal Mode</name>
        <identifier>remap.vimnormal_commandr_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::COMMAND_R,
          KeyCode::COMMAND_R,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>

      <item>
        <name>Command_L tap toggles Normal Mode</name>
        <identifier>remap.vimnormal_commandl_toggle</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::COMMAND_L,
          KeyCode::COMMAND_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>

    </item>

    <!-- Key Activations Mirrored from Complete Vi Mode -->

    <item>
      <name>Additional binding options to enter Normal Mode</name>
      <item>
        <name>Simultaneous Key Presses [Command_L+Command_R] toggles Normal Mode</name>
        <identifier>remap.vimnormal_toggle_commandLR</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __SimultaneousKeyPresses__
          KeyCode::COMMAND_R,
          KeyCode::COMMAND_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Arrow(Down/Left/Right) to Option_L</name>
        <appendix>Disable Up-Arrow</appendix>
        <appendix>(+ When you type Arrow only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_arrow2optionL</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::CURSOR_UP,
          KeyCode::VK_NONE,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::CURSOR_DOWN,
          KeyCode::OPTION_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::CURSOR_LEFT,
          KeyCode::OPTION_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::CURSOR_RIGHT,
          KeyCode::OPTION_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Backquote(`) toggles Normal Mode (if no modifiers pressed)</name>
        <identifier>option.vimnormal_turnoff_backquote</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyToKey__
          KeyCode::BACKQUOTE, ModifierFlag::NONE,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Command_L to Command_L</name>
        <appendix>(+ When you type Command_L only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_commandL</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::COMMAND_L,
          KeyCode::COMMAND_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Command_R to Command_R</name>
        <appendix>(+ When you type Command_R only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_commandR</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::COMMAND_R,
          KeyCode::COMMAND_R,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Control_R to Control_R</name>
        <appendix>(+ When you type Control_R only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_controlR</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::CONTROL_R,
          KeyCode::CONTROL_R,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Escape to turn on Normal Mode</name>
        <appendix>(except in Vim)</appendix>
        <identifier>remap.vimnormal_turnon_escape</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <config_not>notsave.ubiq_vimnormal</config_not>
        <autogen>
          __KeyToKey__
          KeyCode::ESCAPE,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Escape to turn off Normal Mode</name>
        <appendix>(+ turn off Modifier Lock)</appendix>
        <identifier>option.vimnormal_turnoff_escape</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>
          __KeyToKey__
          KeyCode::ESCAPE,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Return to Command_L+Control_L</name>
        <appendix>(+ When you type Return only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_return</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::RETURN,
          KeyCode::CONTROL_L, ModifierFlag::COMMAND_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Fn to Fn</name>
        <appendix>(+ When you type Fn only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_fn2fn</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::FN,
          KeyCode::FN,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Option+V toggles Normal Mode</name>
        <identifier>option.vimnormal_toggle_optionV</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyToKey__
          KeyCode::V, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Option+V to turn on Normal Mode</name>
        <identifier>option.vimnormal_turnon_optionV</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyToKey__
          KeyCode::V, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_ON_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
      <item>
        <name>Disable Shift_L</name>
        <appendix>(+ When you type Shift_L only, toggles Normal Mode)</appendix>
        <identifier>remap.vimnormal_toggle_drop_shiftL</identifier>
        <not>{{UBIQUITOUS_VIM_BINDINGS_IGNORE_APPS}}</not>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::SHIFT_L,
          KeyCode::VK_NONE,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_TOGGLE_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }}
        </autogen>
      </item>
    </item>

    <!-- End Simultaneous Key Activations -->

    <!-- The STICKY in these settings is to allow you to exit Normal Mode when you press the modifier keys, and still allow you to immediately use them as modifiers for the subsequent key command. -->
    <item>
      <name>Normal Mode Auto-deactivation with modifier combinations</name>

      <item>
        <name>Disable Normal Mode on Ctrl+Shift_L key combinations</name>
        <identifier>remap.vimnormal_autodeactivate_ctrl_shift</identifier>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>
          __KeyToKey__
          KeyCode::SHIFT_L, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
          KeyCode::VK_STICKY_CONTROL_L,
          KeyCode::VK_STICKY_SHIFT_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::CONTROL_L, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
          KeyCode::VK_STICKY_CONTROL_L,
          KeyCode::VK_STICKY_SHIFT_L
        </autogen>
      </item>

      <item>
        <name>Disable Normal Mode on Ctrl+Command_L key combinations</name>
        <identifier>remap.vimnormal_autodeactivate_ctrl_command</identifier>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>
          __KeyToKey__
          KeyCode::COMMAND_L, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
          KeyCode::VK_STICKY_CONTROL_L,
          KeyCode::VK_STICKY_COMMAND_L
        </autogen>
        <autogen>
          __KeyToKey__
          KeyCode::CONTROL_L, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
          KeyCode::VK_STICKY_CONTROL_L,
          KeyCode::VK_STICKY_COMMAND_L
        </autogen>
      </item>

      <item>
        <name>Disable Normal Mode on Command_L key combinations</name>
        <identifier>remap.vimnormal_autodeactivate_command</identifier>
        <config_only>notsave.ubiq_vimnormal</config_only>
        <autogen>
          __KeyToKey__
          KeyCode::COMMAND_L, ModifierFlag::COMMAND_L,
          KeyCode::VK_LOCK_ALL_FORCE_OFF,
          KeyCode::VK_CONFIG_FORCE_OFF_notsave_ubiq_vimnormal,
          {{ UBIQUITOUS_VIM_BINDINGS_CANCEL_OPERATOR_PENDING }},
          KeyCode::VK_STICKY_COMMAND_L
        </autogen>
      </item>

    </item>

    <item>
      <name>Activate dead keys</name>
      <item>
        <name>Enable Tab key</name>
        <identifier>option.ubiquitous_vim_bindings_enable_tab</identifier>
      </item>
    </item>

    <!-- Putting these here since items must have names, so we can't hide them completely. -->
    <item hidden="true">
      <item>
        <name></name>
        <identifier vk_config="true">notsave.c_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [c]</autogen>
      </item>
      <item>
        <name></name>
        <identifier vk_config="true">notsave.d_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [d]</autogen>
      </item>
      <item>
        <name></name>
        <identifier vk_config="true">notsave.g_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [g]</autogen>
      </item>
      <item>
        <name></name>
        <identifier vk_config="true">notsave.r_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [r]</autogen>
      </item>
      <item>
        <name></name>
        <identifier vk_config="true">notsave.R_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [R]</autogen>
      </item>
      <item>
        <name></name>
        <identifier vk_config="true">notsave.c_w_operator_pending</identifier>
        <autogen>__ShowStatusMessage__ [w]</autogen>
      </item>
      <item><identifier vk_config="true">notsave.ubiq_register_type_character</identifier></item>
      <item><identifier vk_config="true">notsave.ubiq_register_type_line</identifier></item>
    </item>

  </item> <!-- End Ubiquitous Vim Bindings -->
</root>
