<?xml version="1.0"?>
<root>
  <item>
    <name>Change Eject Key</name>
    <item>
      <name style="important">Important:</name>
      <appendix>Eject key has a delay.</appendix>
      <appendix>You need to press eject key for a few seconds.</appendix>
      <appendix>We recommend you to use "NoEjectDelay" together to get rid of a delay.</appendix>
      <appendix>&#8594; https://pqrs.org/osx/karabiner/noejectdelay.html</appendix>
    </item>
    <item>
      <name>Limitation:</name>
      <appendix>You cannot change eject key to a modifier key (Command,Control,Fn,Option,Shift),</appendix>
      <appendix>and eject key does not support key repeat exceptionally.</appendix>
      <appendix></appendix>
      <appendix>Because eject key sends keydown&amp;keyup event at the same time when you press the key.</appendix>
      <appendix>Karabiner cannot know whether you're holding eject key or not.</appendix>
    </item>
    <item>
      <name>Eject to Option+Backquote(`)</name>
      <identifier>remap.eject_to_option_backquote</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::BACKQUOTE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Eject to Dashboard if no modifiers pressed</name>
      <identifier>remap.eject2dashboard_withoutmodifiers</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::DASHBOARD</autogen>
    </item>
    <item>
      <name>Eject to Control+Shift+Eject (Sleep displays)</name>
      <identifier>remap.eject2controlshifteject</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, ConsumerKeyCode::EJECT, ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Eject to Escape</name>
      <identifier>remap.eject2escape</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::ESCAPE</autogen>
    </item>
    <item>
      <name>Eject to Expose if no modifiers pressed</name>
      <identifier>remap.eject2expose_withoutmodifiers</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Eject to Expose</name>
      <identifier>remap.eject2expose</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete</name>
      <identifier>remap.eject2forwarddelete</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete</name>
      <appendix>(Fn+Eject to Eject)</appendix>
      <identifier>remap.eject2forwarddelete_retain_fnEject</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete if no modifiers pressed</name>
      <identifier>remap.eject2forwarddelete_withoutmodifiers</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
    </item>
    <item>
      <name>Eject to Forward Delete</name>
      <appendix>(+ Eject to Control+D in Terminal,X11)</appendix>
      <identifier>remap.eject2forwarddelete_term_x11</identifier>
      <block>
        <only>TERMINAL, X11</only>
        <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::D, ModifierFlag::CONTROL_L</autogen>
      </block>
      <block>
        <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::FORWARD_DELETE</autogen>
      </block>
    </item>
    <item>
      <name>Eject to Option_L+Delete</name>
      <appendix>(Fn+Eject to Eject)</appendix>
      <identifier>remap.eject2optionaLdelete</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::DELETE, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Eject to Command+Control+Option+Shift+E</name>
      <identifier>remap.eject2fccosE</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Fn+Eject to Command+Control+Option+Shift+E</name>
      <identifier>remap.fneject2fccosE</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::FN | ModifierFlag::NONE, KeyCode::E, ModifierFlag::COMMAND_L | ModifierFlag::CONTROL_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Eject to F12</name>
      <identifier>remap.eject2f12</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::F12</autogen>
    </item>
    <item>
      <name>Eject to F12 (if no modifiers pressed)</name>
      <identifier>remap.eject2f12_withoutmodifiers</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::NONE, KeyCode::F12</autogen>
    </item>
    <item>
      <name>Eject to F13</name>
      <appendix>(Fn+Eject to Eject)</appendix>
      <identifier>remap.eject2f13</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, ModifierFlag::FN, ConsumerKeyCode::EJECT</autogen>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::F13</autogen>
    </item>
    <item>
      <name>Eject to F14</name>
      <identifier>remap.eject2f14</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::F14</autogen>
    </item>
    <item>
      <name>Eject to F15</name>
      <identifier>remap.eject2f15</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::F15</autogen>
    </item>
    <item>
      <name>Eject to Launchpad</name>
      <identifier>remap.eject_to_launchpad</identifier>
      <autogen>
        __KeyToKey__
        ConsumerKeyCode::EJECT, ModifierFlag::NONE,
        KeyCode::LAUNCHPAD,
      </autogen>
    </item>
    <item>
      <name>Eject to PageDown</name>
      <identifier>remap.eject2pagedown</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Disable Eject</name>
      <identifier>remap.drop_eject</identifier>
      <autogen>__KeyToKey__ ConsumerKeyCode::EJECT, KeyCode::VK_NONE</autogen>
    </item>

    <item>
      <name>Use the eject key to eject volumes.</name>
      <appendix>(+ fn-eject to eject disc.)</appendix>
      <identifier>remap.eject_volumes</identifier>
      <autogen>
        __KeyToKey__
        ConsumerKeyCode::EJECT, ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_SHELL_eject_volumes,
      </autogen>
      <autogen>
        __KeyToKey__
        ConsumerKeyCode::EJECT, ModifierFlag::FN,
        KeyCode::VK_OPEN_URL_SHELL_eject_disc,
      </autogen>
    </item>

    <item>
      <name>Use the eject key to eject disc in an external drive.</name>
      <identifier>remap.eject_external_disc</identifier>
	  <autogen>
        __KeyToKey__
        ConsumerKeyCode::EJECT, ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_SHELL_eject_disc_external,
      </autogen>
    </item>
  </item>
</root>
