<?xml version="1.0"?>
<root>
  <item>
    <name>Change Tab Key</name>
    <item>
      <name>Tab to Command_L</name>
      <identifier>remap.tab_to_command_l</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::COMMAND_L</autogen>
    </item>
    <item>
      <name>Tab to Command_L</name>
      <appendix>(+ When you type Tab only, send Expose All)</appendix>
      <identifier>remap.tab2commandL_exposeAll</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::TAB, KeyCode::COMMAND_L, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Tab to Command_L</name>
      <appendix>(+ When you type Tab only, send Tab)</appendix>
      <identifier>remap.tab2commandL_tab</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::TAB, KeyCode::COMMAND_L, KeyCode::TAB</autogen>
    </item>
    <item>
      <name>Tab to Option_L when you held down Control_L</name>
      <appendix>(+ When you type Control_L+Tab, send Control_L+Tab)</appendix>
      <identifier>remap.tab2option_withControlL</identifier>
      <autogen>__KeyOverlaidModifier__ KeyCode::TAB, ModifierFlag::CONTROL_L, KeyCode::OPTION_L, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Tab to Shift_L</name>
      <identifier>remap.tab2shiftL</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::SHIFT_L</autogen>
    </item>
    <item>
      <name>Tab to Delete</name>
      <identifier>remap.tab2delete</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::DELETE</autogen>
    </item>
    <item>
      <name>Tab to Expose All</name>
      <identifier>remap.tab2exposeALL</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Command+Tab to Expose</name>
      <identifier>remap.commandTab2expose</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | ModifierFlag::NONE, KeyCode::EXPOSE_ALL</autogen>
    </item>
    <item>
      <name>Control+tab to Command+F1 (only in Terminal)</name>
      <only>TERMINAL</only>
      <identifier>remap.ctrltab2cmdf1_onlyterminal</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL, KeyCode::F1, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND</autogen>
    </item>
    <item>
      <name>Command+Tab to switch apps within the same Space</name>
      <appendix>(Change Command+Tab to Control+F4)</appendix>
      <appendix>(System Preferences -> Keyboard ->  ^F4 Move focus to active or next window)</appendix>
      <appendix>In Emacs, you need to modify .emacs by mapping Ctrl+F4 to (other-frame))</appendix>
      <identifier>remap.command_tab_to_control_f4</identifier>
      <not>REMOTEDESKTOPCONNECTION,VIRTUALMACHINE</not>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, KeyCode::F4, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command+Tab to F5</name>
      <identifier>remap.commandTab2f5</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, KeyCode::F5</autogen>
    </item>
    <item>
      <name>Option+Tab to F5</name>
      <identifier>remap.optionTab2f5</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::F5</autogen>
    </item>
    <item>
      <name>Command+Tab to Control+Tab (only in Firefox, Google Chrome, Opera, Safari)</name>
      <identifier>remap.commandTab2controlTab_browser</identifier>
      <only>FIREFOX, GOOGLE_CHROME, OPERA, SAFARI</only>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Command+Tab to Option+Tab</name>
      <identifier>remap.commandTab2optionTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Control+Tab to Option+Tab</name>
      <identifier>remap.controlTab2optionTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
    </item>

    <item>
      <name>Use Control+Tab as "Switch application" (Command+Tab)</name>
      <identifier>remap.controlTab2commandTab</identifier>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>CONTROL_L</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>CONTROL_L</replacementvalue>
        </replacementdef>
      </include>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>CONTROL_R</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>CONTROL_R</replacementvalue>
        </replacementdef>
      </include>
    </item>

    <item>
      <name>Use Option+Tab as "Switch application" (Command+Tab)</name>
      <identifier>remap.option_tab_to_switch_application</identifier>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>OPTION_L</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>OPTION_L</replacementvalue>
        </replacementdef>
      </include>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>OPTION_R</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>OPTION_R</replacementvalue>
        </replacementdef>
      </include>
    </item>

    <item>
      <name>Option+Tab to Control+Tab</name>
      <identifier>remap.optionTab2controlTab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Change Command+Tab to Command+Tab+Option</name>
      <appendix>(Bring app to foreground when you've switched app by Command+Tab.)</appendix>
      <identifier>remap.command_tab_to_command_tab_option</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        KeyCode::VK_STICKY_OPTION_R_FORCE_ON, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_L, KeyCode::COMMAND_L,
        Option::KEYTOKEY_AFTER_KEYUP, KeyCode::VK_WAIT_100MS, KeyCode::VK_STICKY_OPTION_R_FORCE_OFF</autogen>
      <autogen>__KeyToKey__ KeyCode::COMMAND_R, KeyCode::COMMAND_R,
        Option::KEYTOKEY_AFTER_KEYUP, KeyCode::VK_WAIT_100MS, KeyCode::VK_STICKY_OPTION_R_FORCE_OFF</autogen>
    </item>
    <item>
      <name>Swap Command+Tab and Control+Tab</name>
      <identifier>remap.swap_commandtabcontroltab</identifier>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>CONTROL_L</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>CONTROL_L</replacementvalue>
        </replacementdef>
      </include>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>CONTROL_R</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>CONTROL_R</replacementvalue>
        </replacementdef>
      </include>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, KeyCode::TAB, ModifierFlag::CONTROL_L</autogen>
    </item>
    <item>
      <name>Swap Command+Tab and Option+Tab</name>
      <identifier>remap.swap_commandtaboptiontab</identifier>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>OPTION_L</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>OPTION_L</replacementvalue>
        </replacementdef>
      </include>
      <include path="../snippets/modifier_tab_to_command_tab.xml">
        <replacementdef>
          <replacementname>FROM_MODIFIER</replacementname>
          <replacementvalue>OPTION_R</replacementvalue>
        </replacementdef>
        <replacementdef>
          <replacementname>TO_MODIFIER</replacementname>
          <replacementvalue>OPTION_R</replacementvalue>
        </replacementdef>
      </include>
      <autogen>__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND, KeyCode::TAB, ModifierFlag::OPTION_L</autogen>
    </item>
    <item>
      <name>Disable Tab</name>
      <identifier>remap.drop_tab</identifier>
      <autogen>__KeyToKey__ KeyCode::TAB, KeyCode::VK_NONE</autogen>
    </item>

    <item>
      <name>Tabmode</name>
      <item>
        <name>What's Tabmode?</name>
        <appendix>It replaces the default shortcut for switching applications. (cmd+tab)</appendix>
        <appendix>While tab is pressed, use your favourite combination of left/right keys to switch between apps.</appendix>
        <appendix>It has evolved into a window manager shortcut, capable of managing windows, tabs,</appendix>
        <appendix>spaces and split views.</appendix>
        <identifier vk_config="true">notsave.tabmode</identifier>
        <autogen>__KeyToKey__ KeyCode::F, KeyCode::VK_MODIFIER_EXTRA1</autogen>
        <block>
          <!-- [Option] ; to Command+Option+L -->
          <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::EXTRA1, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L| ModifierFlag::CONTROL_L</autogen>
          <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::EXTRA1, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L| ModifierFlag::CONTROL_L</autogen>
          <config_only>option.tabmode_g_j_l_to_changespaces</config_only>
        </block>
        <block>
          <config_only>option.tabmode_jl</config_only>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::J, KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_hl</config_only>
          <autogen>__KeyToKey__ KeyCode::L, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_leftright</config_only>
          <autogen>__KeyToKey__ KeyCode::CURSOR_RIGHT, KeyCode::TAB, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::CURSOR_LEFT, KeyCode::TAB, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_ik</config_only>
          <block>
            <only>VIRTUALMACHINE</only>
            <config_only>option.tabmode_ikvm</config_only>
            <autogen>__KeyToKey__ KeyCode::I, KeyCode::UK_SECTION, ModifierFlag::COMMAND_L</autogen>
            <autogen>__KeyToKey__ KeyCode::K, KeyCode::UK_SECTION, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
          </block>
          <autogen>__KeyToKey__ KeyCode::I, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L</autogen>
          <autogen>__KeyToKey__ KeyCode::K, KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_uo</config_only>
          <block>
            <only>TERMINAL</only>
            <config_only>remap.app_term_screen_switch</config_only>
            <autogen>__KeyToKey__ KeyCode::U, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::P</autogen>
            <autogen>__KeyToKey__ KeyCode::O, KeyCode::A, ModifierFlag::CONTROL_L, KeyCode::N</autogen>
          </block>
          <autogen>__KeyToKey__ KeyCode::U, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
          <autogen>__KeyToKey__ KeyCode::O, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_q</config_only>
          <autogen>__KeyToKey__ KeyCode::Q, KeyCode::Q, ModifierFlag::COMMAND_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_w</config_only>
          <autogen>__KeyToKey__ KeyCode::W, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
        </block>
        <block>
          <config_only>option.tabmode_switchviews</config_only>
          <autogen>__KeyToKey__ KeyCode::B, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::N, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::M, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
          <autogen>__KeyToKey__ KeyCode::H, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L | ModifierFlag::SHIFT_L</autogen>
        </block>
        <block>
          <!-- [Option] Y to Command+W -->
          <autogen>__KeyToKey__ KeyCode::Y, KeyCode::W, ModifierFlag::COMMAND_L</autogen>
          <config_only>option.tabmode_y_to_w</config_only>
        </block>
        <block>
          <!-- [Option] P to Command+T -->
          <autogen>__KeyToKey__ KeyCode::P, KeyCode::T, ModifierFlag::COMMAND_L</autogen>
          <config_only>option.tabmode_p_to_t</config_only>
        </block>
        <block>
          <!-- [Option] ' to Command+Q -->
          <autogen>__KeyToKey__ KeyCode::QUOTE, KeyCode::Q, ModifierFlag::COMMAND_L</autogen>
          <config_only>option.tabmode_quote_to_q</config_only>
        </block>
        <block>
          <!-- [Option] ; to Command+Option+L -->
          <autogen>__KeyToKey__ KeyCode::SEMICOLON, KeyCode::L, ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L</autogen>
          <config_only>option.tabmode_semicolon_to_launchbar</config_only>
        </block>
      </item>
      <item>
        <name>Keeping tab pressed turns on "Tab Mode"</name>
        <appendix>(+ When you type Tab only, send Tab)</appendix>
        <identifier>remap.tabmode</identifier>
        <autogen>__KeyOverlaidModifier__ KeyCode::TAB, KeyCode::VK_CONFIG_SYNC_KEYDOWNUP_notsave_tabmode , KeyCode::TAB</autogen>
      </item>
      <item><name>──────────────────────────────</name></item>
      <item>
        <name>[Option] Switch apps with J/L</name>
        <appendix>For people who like jkli configuration</appendix>
        <identifier>option.tabmode_jl</identifier>
      </item>
      <item>
        <name>[Option] Switch apps with h/l</name>
        <appendix>For people who like hjkl configuration</appendix>
        <identifier>option.tabmode_hl</identifier>
      </item>
      <item>
        <name>[Option] Switch apps with left/right</name>
        <appendix>For people who like directional arrows</appendix>
        <identifier>option.tabmode_leftright</identifier>
      </item>
      <item>
        <name>[Option] Switch windows of frontmost app with i/k</name>
        <appendix>For people who like jkli configuration</appendix>
        <appendix>+(Having F pressed, K/I send Command+(N/W) (New/Close Window))</appendix>
        <identifier>option.tabmode_ik</identifier>
      </item>
      <item>
        <name>[Option] Send Uk Section instead of Backquote when on virtual machine</name>
        <appendix>For people who use the previous option, vmware and an international keyboard</appendix>
        <identifier>option.tabmode_ikvm</identifier>
      </item>
      <item>
        <name>[Option] Switch tabs of frontmost app with U/O</name>
        <appendix>For people who like jkli configuration and have cmd+option+left/rigth as shortcut to</appendix>
        <appendix>switch tabs</appendix>
        <identifier>option.tabmode_uo</identifier>
      </item>
      <item>
        <name>[Option] Quit application with q</name>
        <identifier>option.tabmode_q</identifier>
      </item>
      <item>
        <name>[Option] Close window with w</name>
        <identifier>option.tabmode_w</identifier>
      </item>
      <item>
        <name>[Option] bnmh to (left/down/right/up)+Ctrl+Optn+Shift+</name>
        <appendix>Shortcuts used to switch split panes it apps like iTerm2 and others</appendix>
        <identifier>option.tabmode_switchviews</identifier>
      </item>
      <item>
        <name>[Option] Y to Command+W</name>
        <identifier>option.tabmode_y_to_w</identifier>
      </item>
      <item>
        <name>[Option] P to Command+T</name>
        <identifier>option.tabmode_p_to_t</identifier>
      </item>
      <item>
        <name>[Option] ' to Command+Q</name>
        <identifier>option.tabmode_quote_to_q</identifier>
      </item>
      <item>
        <name>[Option] ; to Command+Option+L</name>
        <identifier>option.tabmode_semicolon_to_launchbar</identifier>
      </item>
      <item>
        <name>[Option] F+J/L to Command+Option+Control+Left/Right</name>
        <appendix>(Using this to change spaces)</appendix>
        <identifier>option.tabmode_g_j_l_to_changespaces</identifier>
      </item>
    </item>

    <item>
      <name style="slight">Items for backwards compatibility</name>
      <item>
        <name style="slight">Option+Tab to Command+Tab</name>
        <identifier>remap.optionTab2commandTab</identifier>
        <include path="../snippets/modifier_tab_to_command_tab.xml">
          <replacementdef>
            <replacementname>FROM_MODIFIER</replacementname>
            <replacementvalue>OPTION_L</replacementvalue>
          </replacementdef>
          <replacementdef>
            <replacementname>TO_MODIFIER</replacementname>
            <replacementvalue>OPTION_L</replacementvalue>
          </replacementdef>
        </include>
        <include path="../snippets/modifier_tab_to_command_tab.xml">
          <replacementdef>
            <replacementname>FROM_MODIFIER</replacementname>
            <replacementvalue>OPTION_R</replacementvalue>
          </replacementdef>
          <replacementdef>
            <replacementname>TO_MODIFIER</replacementname>
            <replacementvalue>OPTION_R</replacementvalue>
          </replacementdef>
        </include>
      </item>
    </item>

  </item>
</root>
