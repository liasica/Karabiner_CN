<?xml version="1.0"?>
<root>
  <item>
    <name>Custom Shortcuts</name>
    <item>
      <name>Hold Command+Q to Quit Application</name>
      <appendix>(You can adjust the threshold time of holding by</appendix>
      <appendix>"Holding Key to Key &gt; Holding Threshold" in Parameters tab.)</appendix>
      <identifier>remap.holdcommandQ</identifier>
      <modifier_not>
        ModifierFlag::CONTROL_L,
        ModifierFlag::CONTROL_R,
        ModifierFlag::OPTION_L,
        ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,
        ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __HoldingKeyToKey__
        KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,

        @begin
        KeyCode::VK_NONE,
        @end

        @begin
        KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        @end

        Option::NOREPEAT,
      </autogen>
    </item>
    <item>
      <name>Press Command+Q twice to Quit Application</name>
      <identifier>remap.doublepresscommandQ</identifier>
      <modifier_not>
        ModifierFlag::CONTROL_L,
        ModifierFlag::CONTROL_R,
        ModifierFlag::OPTION_L,
        ModifierFlag::OPTION_R,
        ModifierFlag::SHIFT_L,
        ModifierFlag::SHIFT_R,
      </modifier_not>
      <autogen>
        __DoublePressModifier__
        KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
        KeyCode::VK_NONE,
        KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Switch current setting profile by fn+1,fn+2,fn+3, and fn+4.</name>
      <appendix>(You can make multiple profiles by MenuBar tab on Preferences.</appendix>
      <appendix>This setting changes current profile by shortcut.)</appendix>
      <identifier>remap.switch_profile_fn1_fn4</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_1, ModifierFlag::FN, KeyCode::VK_OPEN_URL_APP_Karabiner_Profile0</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_2, ModifierFlag::FN, KeyCode::VK_OPEN_URL_APP_Karabiner_Profile1</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_3, ModifierFlag::FN, KeyCode::VK_OPEN_URL_APP_Karabiner_Profile2</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::FN, KeyCode::VK_OPEN_URL_APP_Karabiner_Profile3</autogen>
    </item>
    <item>
      <name>Open Karabiner by fn+K.</name>
      <appendix>(+ Reload XML by fn+R.)</appendix>
      <appendix>(+ Open EventViewer by fn+E.)</appendix>
      <identifier>remap.open_karabiner_by_fn_k</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::FN | ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_APP_Karabiner,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::R, ModifierFlag::FN | ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_APP_Karabiner_ReloadXML,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::E, ModifierFlag::FN | ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_APP_Karabiner_EventViewer,
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <!--
          Based off an idea from http://stevelosh.com/blog/2012/10/a-modern-space-cadet/#controlescape
      -->
      <name>F19 to Escape and Control</name>
      <appendix>Tap F19 for Escape, Hold F19 for Control</appendix>
      <appendix>Works well with using Seil to remap CapsLock to F19(code 80).</appendix>
      <identifier>bilalh.remap.f19_escape_control</identifier>
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::F19,
        KeyCode::CONTROL_L,
        KeyCode::ESCAPE
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Change Command+Q to Command+Shift+W</name>
      <appendix>Change Command+Shift_L+Q to Command+Q</appendix>
      <identifier>remap.commandQ2commandW_commandshiftQ2commandQ</identifier>
      <autogen>__KeyToKey__ KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | ModifierFlag::SHIFT_L, KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | ModifierFlag::NONE</autogen>
      <autogen>__KeyToKey__ KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | ModifierFlag::NONE,    KeyCode::W, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | ModifierFlag::SHIFT_L</autogen>
    </item>
    <item>
      <name>Change Command+Q to Escape.</name>
      <appendix>(Quit Application by Command+Option+Q.)</appendix>
      <identifier>remap.cmdoptqtoquit</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION | ModifierFlag::NONE,
        KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::Q, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | ModifierFlag::NONE,
        KeyCode::ESCAPE,
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Change "right option key + equal key" to "move focus to next window in application".</name>
      <appendix>(You need to enable command-backquote (⌘`) shortcut from System Preferences.)</appendix>
      <identifier>remap.option_equal_to_command_backquote</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::EQUAL, ModifierFlag::OPTION_R,
        KeyCode::BACKQUOTE, ModifierFlag::COMMAND_L
      </autogen>
    </item>
    <item>
      <name>Change "right option key + bracket keys" to "move focus to previous/next tab in application".</name>
      <appendix>(Change right option key + bracket keys to command-{})</appendix>
      <identifier>remap.option_brackets_to_command_shift_brackets</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_LEFT, ModifierFlag::OPTION_R,
        KeyCode::BRACKET_LEFT, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::BRACKET_RIGHT, ModifierFlag::OPTION_R,
        KeyCode::BRACKET_RIGHT, ModifierFlag::COMMAND_R | ModifierFlag::SHIFT_R
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Toggle Bluetooth by fn-b</name>
      <identifier>remap.toggle_bluetooth_by_fn_b</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::B, ModifierFlag::FN | ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_SHELL_toggle_bluetooth,
      </autogen>
    </item>
    <item>
      <name>Toggle Wi-Fi by fn-w</name>
      <identifier>remap.toggle_wifi_by_fn_w</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::W, ModifierFlag::FN | ModifierFlag::NONE,
        KeyCode::VK_OPEN_URL_SHELL_toggle_wifi,
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Move mouse cursor to the center of the frontmost app's window:</name>
      <item>
        <name>By pressing fn key alone.</name>
        <identifier>remap.move_mouse_cursor_center_fn_alone</identifier>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::FN,

          @begin
          KeyCode::FN,
          @end

          @begin
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center,
          @end
        </autogen>
      </item>

      <item>
        <name>By holding quote(') key down</name>
        <identifier>remap.move_mouse_cursor_center_holding_quote</identifier>
        <autogen>
          __HoldingKeyToKey__
          KeyCode::QUOTE, ModifierFlag::NONE,

          @begin
          KeyCode::QUOTE,
          @end

          @begin
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center,
          @end
        </autogen>
      </item>

      <item>
        <name>By holding slash(/) key down</name>
        <identifier>remap.move_mouse_cursor_center_holding_slash</identifier>
        <autogen>
          __HoldingKeyToKey__
          KeyCode::SLASH, ModifierFlag::NONE,

          @begin
          KeyCode::SLASH,
          @end

          @begin
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center,
          @end
        </autogen>
      </item>

      <item>
        <name>By button4 on mouse.</name>
        <identifier>remap.move_mouse_cursor_center_button4</identifier>
        <autogen>
          __KeyToKey__
          PointingButton::BUTTON4,
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center,
        </autogen>
      </item>

      <item>
        <name>By button5 on mouse.</name>
        <identifier>remap.move_mouse_cursor_center_button5</identifier>
        <autogen>
          __KeyToKey__
          PointingButton::BUTTON5,
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_center,
        </autogen>
      </item>
    </item>
    <item>
      <name>Move mouse cursor to top-left side of the frontmost app's window:</name>
      <item>
        <name>By pressing fn key alone.</name>
        <identifier>remap.move_mouse_cursor_fn_alone</identifier>
        <autogen>
          __KeyOverlaidModifier__
          KeyCode::FN,

          @begin
          KeyCode::FN,
          @end

          @begin
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_top_left,
          @end
        </autogen>
      </item>

      <item>
        <name>By holding quote(') key down</name>
        <identifier>remap.move_mouse_cursor_holding_quote</identifier>
        <autogen>
          __HoldingKeyToKey__
          KeyCode::QUOTE, ModifierFlag::NONE,

          @begin
          KeyCode::QUOTE,
          @end

          @begin
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_top_left,
          @end
        </autogen>
      </item>

      <item>
        <name>By holding slash(/) key down</name>
        <identifier>remap.move_mouse_cursor_holding_slash</identifier>
        <autogen>
          __HoldingKeyToKey__
          KeyCode::SLASH, ModifierFlag::NONE,

          @begin
          KeyCode::SLASH,
          @end

          @begin
          KeyCode::VK_OPEN_URL_SHELL_warp_mouse_cursor_position_front_window_top_left,
          @end
        </autogen>
      </item>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Launch iTunes when you press the play/pause button twice.</name>
      <identifier>remap.launch_itunes_by_play_button_twice</identifier>
      <autogen>
        __KeyToKey__
        ConsumerKeyCode::MUSIC_PLAY,
        KeyCode::VK_NONE,

        Option::KEYTOKEY_DELAYED_ACTION,
        ConsumerKeyCode::MUSIC_PLAY,

        Option::KEYTOKEY_DELAYED_ACTION_CANCELED_BY, ConsumerKeyCode::MUSIC_PLAY,
        KeyCode::VK_OPEN_URL_APP_iTunes,
        KeyCode::VK_KEYTOKEY_DELAYED_ACTION_DROP_EVENT,
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Change screen shot shortcuts</name>
      <appendix>(Swap command-shift-3/4 and command-control-shift-3)</appendix>
      <identifier>remap.change_screen_shot_shortcuts</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::KEY_3, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
        KeyCode::KEY_3, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::CONTROL_L,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::KEY_3, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
        KeyCode::KEY_3, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
        KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::CONTROL_L,
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT | ModifierFlag::NONE,
        KeyCode::KEY_4, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_COMMAND | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT,
      </autogen>
    </item>
    <item><name>──────────────────────────────</name></item>
    <item>
      <name>Use old style fn keypad</name>
      <appendix>fn-789: 789</appendix>
      <appendix>fn-UIO: 456</appendix>
      <appendix>fn-JKL: 123</appendix>
      <appendix>fn-M  : 0</appendix>
      <appendix></appendix>
      <appendix>fn-0: /</appendix>
      <appendix>fn-P: *</appendix>
      <appendix>fn-;: -</appendix>
      <appendix>fn-.: .</appendix>
      <appendix>fn-/: +</appendix>
      <appendix>fn-6: clear</appendix>
      <identifier>remap.old_style_fn_keypad</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_7, ModifierFlag::FN, KeyCode::KEYPAD_7</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_8, ModifierFlag::FN, KeyCode::KEYPAD_8</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_9, ModifierFlag::FN, KeyCode::KEYPAD_9</autogen>
      <autogen>__KeyToKey__ KeyCode::U, ModifierFlag::FN, KeyCode::KEYPAD_4</autogen>
      <autogen>__KeyToKey__ KeyCode::I, ModifierFlag::FN, KeyCode::KEYPAD_5</autogen>
      <autogen>__KeyToKey__ KeyCode::O, ModifierFlag::FN, KeyCode::KEYPAD_6</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::FN, KeyCode::KEYPAD_1</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::FN, KeyCode::KEYPAD_2</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::FN, KeyCode::KEYPAD_3</autogen>
      <autogen>__KeyToKey__ KeyCode::M, ModifierFlag::FN, KeyCode::KEYPAD_0</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_6, ModifierFlag::FN, KeyCode::KEYPAD_CLEAR</autogen>
      <autogen>__KeyToKey__ KeyCode::SLASH, ModifierFlag::FN, KeyCode::KEYPAD_PLUS</autogen>
      <autogen>__KeyToKey__ KeyCode::SEMICOLON, ModifierFlag::FN, KeyCode::KEYPAD_MINUS</autogen>
      <autogen>__KeyToKey__ KeyCode::P, ModifierFlag::FN, KeyCode::KEYPAD_MULTIPLY</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::FN, KeyCode::KEYPAD_SLASH</autogen>
      <autogen>__KeyToKey__ KeyCode::MINUS, ModifierFlag::FN, KeyCode::KEYPAD_EQUAL</autogen>
      <autogen>__KeyToKey__ KeyCode::DOT, ModifierFlag::FN, KeyCode::KEYPAD_DOT</autogen>
    </item>
  </item>
</root>
