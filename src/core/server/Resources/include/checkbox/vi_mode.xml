<?xml version="1.0"?>
<root>
  <item>
    <name>Vi Mode</name>

    <item>
      <name>Simple Vi Mode v2</name>
      <appendix>Use S key to enable hjkl key operation.</appendix>
      <appendix><![CDATA[  * Left-arrow: S down -> H down -> H up  ]]></appendix>
      <appendix><![CDATA[  * Down-arrow: S down -> J down -> J up  ]]></appendix>
      <appendix><![CDATA[  * Up-arrow: S down -> K down -> K up  ]]></appendix>
      <appendix><![CDATA[  * Right-arrow: S down -> L down -> L up  ]]></appendix>
      <appendix></appendix>
      <appendix>The hjkl keys also act as arrow keys when you hold s+hjkl keys down.</appendix>
      <appendix>(You can adjust timeout by "__BlockUntilKeyUp__ Timeout" in Parameters tab.</appendix>
      <appendix></appendix>
      <appendix>F key acts as fn key when S key is pressed.</appendix>
      <appendix><![CDATA[  * S+F+H: Home  ]]></appendix>
      <appendix><![CDATA[  * S+F+J: Page Down  ]]></appendix>
      <appendix><![CDATA[  * S+F+K: Page Up  ]]></appendix>
      <appendix><![CDATA[  * S+F+L: End  ]]></appendix>
      <identifier>remap.simple_vi_mode</identifier>

      {{ SIMPLE_VI_MODE_CONDITION }}

      <autogen>
        __KeyOverlaidModifier__
        KeyCode::S,

        <!--
            Use notsave.simple_vi_mode in order to be higher priority.
            Use ModifierFlag::SIMPLE_VI_MODE_2 for __DropAllKeys__.
        -->
        @begin
        KeyCode::VK_CONFIG_FORCE_ON_notsave_simple_vi_mode,
        KeyCode::VK_MODIFIER_SIMPLE_VI_MODE_2,
        @end

        @begin
        KeyCode::S,
        @end
      </autogen>
    </item>
    <item hidden="true">
      <identifier vk_config="true">notsave.simple_vi_mode</identifier>
      <modifier_only>ModifierFlag::SIMPLE_VI_MODE_2</modifier_only>

      {{ SIMPLE_VI_MODE_EXTRA }}

      <autogen>
        __BlockUntilKeyUp__ KeyCode::S
      </autogen>

      <autogen>
        __KeyToKey__ KeyCode::H, KeyCode::CURSOR_LEFT,

        Option::KEYTOKEY_INCREASE_MODIFIER_FLAGS,
        ModifierFlag::SIMPLE_VI_MODE_2,
      </autogen>
      <autogen>
        __KeyToKey__ KeyCode::J, KeyCode::CURSOR_DOWN,

        Option::KEYTOKEY_INCREASE_MODIFIER_FLAGS,
        ModifierFlag::SIMPLE_VI_MODE_2,
      </autogen>
      <autogen>
        __KeyToKey__ KeyCode::K, KeyCode::CURSOR_UP,

        Option::KEYTOKEY_INCREASE_MODIFIER_FLAGS,
        ModifierFlag::SIMPLE_VI_MODE_2,
      </autogen>
      <autogen>
        __KeyToKey__ KeyCode::L, KeyCode::CURSOR_RIGHT,

        Option::KEYTOKEY_INCREASE_MODIFIER_FLAGS,
        ModifierFlag::SIMPLE_VI_MODE_2,
      </autogen>

      <autogen>
        __KeyToKey__ KeyCode::F, KeyCode::FN,

        Option::KEYTOKEY_INCREASE_MODIFIER_FLAGS,
        ModifierFlag::SIMPLE_VI_MODE_2,
      </autogen>

      <autogen>
        __DropAllKeys__
        ModifierFlag::SIMPLE_VI_MODE_2,

        Option::DROPALLKEYS_DROP_KEY,
      </autogen>
    </item>

    <item><name>──────────────────────────────</name></item>
    <item><name>Other plain hjkl operations</name></item>

    <item>
      <name>Command_L+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_commandl_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::COMMAND_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::COMMAND_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::COMMAND_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::COMMAND_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Command_R+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::COMMAND_R, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::COMMAND_R, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::COMMAND_R, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Control_L+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_control_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::CONTROL_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::CONTROL_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::CONTROL_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Fn+hjkl to Left/Down/Up/Right</name>
      <identifier>option.vimode_fn_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::FN, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::FN, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::FN, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::FN, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Fn+hjkl to rapid Left/Down/Up/Right</name>
      <appendix>(delay until repeat: 1ms, key repeat: 1ms)</appendix>
      <identifier>option.vimode_fn_hjkl_rapid</identifier>
      <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::FN,
        KeyCode::CURSOR_LEFT,
        DelayUntilRepeat::RawValue::1, KeyRepeat::RawValue::1
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::FN,
        KeyCode::CURSOR_DOWN,
        DelayUntilRepeat::RawValue::1, KeyRepeat::RawValue::1
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::K,
        ModifierFlag::FN, KeyCode::CURSOR_UP,
        DelayUntilRepeat::RawValue::1, KeyRepeat::RawValue::1
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::FN,
        KeyCode::CURSOR_RIGHT,
        DelayUntilRepeat::RawValue::1, KeyRepeat::RawValue::1
      </autogen>
    </item>
    <item>
      <name>Option_L+hjkl to Left/Down/Up/Right</name>
      <identifier>option.extra_cursor_optionL_kjhl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT</autogen>
    </item>
    <item>
      <name>Command_R+g/G to Home/End</name>
      <identifier>option.vimode_gG</identifier>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::COMMAND_R | ModifierFlag::NONE, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::COMMAND_R | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT, KeyCode::END</autogen>
    </item>
    <item>
      <name>Control_L+g/G to Home/End</name>
      <identifier>option.vimode_control_gG</identifier>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_L | ModifierFlag::NONE, KeyCode::HOME</autogen>
      <autogen>__KeyToKey__ KeyCode::G, ModifierFlag::CONTROL_L | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT, KeyCode::END</autogen>
    </item>
    <item>
      <name>Command_R+bf to PageUp/PageDown</name>
      <identifier>option.vimode_bf</identifier>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::COMMAND_R, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::COMMAND_R, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Control_L+bf to PageUp/PageDown</name>
      <identifier>option.vimode_control_bf</identifier>
      <autogen>__KeyToKey__ KeyCode::B, ModifierFlag::CONTROL_L, KeyCode::PAGEUP</autogen>
      <autogen>__KeyToKey__ KeyCode::F, ModifierFlag::CONTROL_L, KeyCode::PAGEDOWN</autogen>
    </item>
    <item>
      <name>Command_R+0$ to Command+Left/Right</name>
      <identifier>option.vimode_0dollar</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::COMMAND_R, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::COMMAND_R | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Control_L+0$ to Command+Left/Right</name>
      <identifier>option.vimode_control_0dollar</identifier>
      <autogen>__KeyToKey__ KeyCode::KEY_0, ModifierFlag::CONTROL_L, KeyCode::CURSOR_LEFT, ModifierFlag::COMMAND_L</autogen>
      <autogen>__KeyToKey__ KeyCode::KEY_4, ModifierFlag::CONTROL_L | MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT, KeyCode::CURSOR_RIGHT, ModifierFlag::COMMAND_L</autogen>
    </item>
    <item>
      <name>Option_L+hjkl to Option+Left/Down/Up/Right</name>
      <identifier>option.vimode_option_hjkl</identifier>
      <autogen>__KeyToKey__ KeyCode::H, ModifierFlag::OPTION_L, KeyCode::CURSOR_LEFT, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::J, ModifierFlag::OPTION_L, KeyCode::CURSOR_DOWN, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::K, ModifierFlag::OPTION_L, KeyCode::CURSOR_UP, ModifierFlag::OPTION_L</autogen>
      <autogen>__KeyToKey__ KeyCode::L, ModifierFlag::OPTION_L, KeyCode::CURSOR_RIGHT, ModifierFlag::OPTION_L</autogen>
    </item>
  </item>
</root>
